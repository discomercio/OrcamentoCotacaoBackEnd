// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.3.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Especificacao.Ambiente.ApiMagento.PedidoMagento.CadastrarPedido
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class FLuxoCadastroPedidoMagento_PFFeature : object, Xunit.IClassFixture<FLuxoCadastroPedidoMagento_PFFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "FluxoCadastroPedidoMagento_PF.feature"
#line hidden
        
        public FLuxoCadastroPedidoMagento_PFFeature(FLuxoCadastroPedidoMagento_PFFeature.FixtureData fixtureData, Especificacao_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "FLuxoCadastroPedidoMagento - PF", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Fluxo de cadastro do magento")]
        [Xunit.TraitAttribute("FeatureTitle", "FLuxoCadastroPedidoMagento - PF")]
        [Xunit.TraitAttribute("Description", "Fluxo de cadastro do magento")]
        public virtual void FluxoDeCadastroDoMagento()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fluxo de cadastro do magento", "Paradigma de salvamento: fazer o mesmo que acontece com o processo semi-automátic" +
                    "o.\r\nSe o semi-automático der erro, damos erro. Se aceitar, aceitamos.\r\n\r\n\r\ndo no" +
                    "sso lado, o que eles informarem como endereço de cobrança, usaremos p/ criar o c" +
                    "adastro principal, \r\ncaso o cliente não exista ainda. Mas se o cliente já existi" +
                    "r no sistema, não iremos atualizar o cadastro principal, \r\niremos usar os dados " +
                    "somente no pedido\r\nusar o flag para indicar que esse t_cliente foi criado pelo m" +
                    "agento (o sistema_responsavel_cadastro)\r\nAo chegar um pedido, se o cliente não e" +
                    "xistir, cadstramos ele imediatamente.\r\nAo cadastrar o cliente:\r\n- se for PF, ass" +
                    "umimos Endereco_produtor_rural_status = COD_ST_CLIENTE_PRODUTOR_RURAL_NAO e Ende" +
                    "reco_contribuinte_icms_status = NAO\r\nEntrega Imediata\r\nSe o cliente for PF, semp" +
                    "re colocar com entrega imediata SIM\r\n\r\nEndereço\r\nSe o cliente for PF, sempre ser" +
                    "á usado somente o endereço de entrega como sendo o único endereço do cliente.\r\n\r" +
                    "\nSe for PF, copio o endereço de entrega para o endereço de cobrança e apago o en" +
                    "dereço de entrega.\r\n\tno caso de campos que só existam no endereço de cobrança (e" +
                    "xemplo: telefone) mantemos o do endereço de cobrança e não exigimos o campo.\r\nDe" +
                    "pois disso, se o cliente não existir, cadastrar com o endereço de cobrança\r\n\r\n\r\n" +
                    "2) Seria necessário tratar a possibilidade de ocorrer acesso concorrente entre o" +
                    " cadastramento semi-automático e a integração. \r\nEm ambos os casos, seria import" +
                    "ante verificar no instante final antes da efetivar o cadastramento do pedido se " +
                    "o número Magento e, \r\ncaso exista, o número do pedido marketplace já estão cadas" +
                    "trados em algum pedido c/ st_entrega válido (diferente de cancelado).\r\n\r\nao cria" +
                    "r o pedido, tem que cadastrar tb o cliente (sem o sexo)\r\neles mandam:\r\n- dados c" +
                    "adastrais\r\n- dados de cobrança\r\n- dados de entrega\r\nfalta: sexo e data de nascim" +
                    "ento - vao ficar em branco\r\n\r\n- campo \"frete\" -> se for <> 0, vamos usar o indic" +
                    "ador. se for 0, sem indicador\r\nO valor do frete no momento não estamos tratando " +
                    "no sistema, mas acho que podemos salvar a informação no campo t_PEDIDO.vl_frete\r" +
                    "\nPor enquanto, todos os registros estão c/ esse valor zerado e o campo não é usa" +
                    "do em nenhum lugar, mas já que temos a \r\npossibilidade de salvar essa informação" +
                    ", creio que deveríamos gravar nesse campo\r\nFrete/RA\r\nValor de Frete: analisar se" +
                    " há valor de frete para definir se o pedido terá RA ou não. \r\nSe houver frete, d" +
                    "eve-se automaticamente informar que o pedido possui RA e selecionar o indicador " +
                    "\'FRETE\'.\r\n\r\npergunta: se COD_FORMA_PAGTO_PARCELADO_CARTAO temos que usar os coef" +
                    "icientes do fabricante?\r\nrespsota: sim, mas precisa manter o valor do preço e o " +
                    "total da nota igual. Vamos colocar essa diferença no Vl Lista\r\n\r\nPonto de Referê" +
                    "ncia\r\nColocar a informação do ponto de referência no campo \'Constar na NF\'. Comp" +
                    "arar o conteúdo do ponto de referência com o campo complemento. \r\nSe forem iguai" +
                    "s, não colocar em \'Constar na NF\'. Se o campo complemento exceder o tamanho do B" +
                    "D e precisar ser truncado, copiá-lo no campo \r\n\'Constar na NF\', junto com o pont" +
                    "o de referência.\r\n\r\nPedido que vier do Markeplace deve ser Tipo_Parcelamento = C" +
                    "OD_FORMA_PAGTO_PARCELA_UNICA = \"5\"  \r\ne Op_pu_forma_pagto = \"2\" \"Depósito\" e C_p" +
                    "u_vencto_apos = 30 dias (Definido no appsettings)\r\nPedido que vier do Magento de" +
                    "ve ser Tipo_Parcelamento = COD_FORMA_PAGTO_A_VISTA = \"1\" \r\ne Op_av_forma_pagto =" +
                    " \"6\" \"Boleto\" ou Tipo_Parcelamento = COD_FORMA_PAGTO_PARCELADO_CARTAO = \"2\" \r\n(D" +
                    "efinido no appsettings)\r\nTipo_Parcelamento:\r\n    COD_FORMA_PAGTO_A_VISTA = \"1\",\r" +
                    "\n    COD_FORMA_PAGTO_PARCELADO_CARTAO = \"2\",\r\n    COD_FORMA_PAGTO_PARCELA_UNICA " +
                    "= \"5\",\r\n\r\nValidar se o que expomos pelo ObterCodigoMarketplace foi informado\r\n\r\n" +
                    "//Orcamentista = \"FRETE\" (vamos ler do appsettings)\r\n//Loja = \"201\" (vamos ler d" +
                    "o appsettings)\r\n//Vendedor = usuário que fez o login (ler do token)\r\n\r\nSexo\r\nRet" +
                    "irar obrigatoriedade do preenchimento do sexo, permitindo deixá-lo vazio.\r\n\r\ncen" +
                    "tro de dsitribuição: o magento tem mas não usamos. Nem vamos expor esse flag.\r\n\r" +
                    "\npreço: aceitamos o valor que vier do magento. Não validamos o preço.\r\n\r\nproduto" +
                    "s: sempre virão divididos, nunca vai vir um produto composto.\r\n\r\nEstoque: não é " +
                    "um problema. ", tagsOfScenario, argumentsOfScenario);
#line 3
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.3.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                FLuxoCadastroPedidoMagento_PFFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                FLuxoCadastroPedidoMagento_PFFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
