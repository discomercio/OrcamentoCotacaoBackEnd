// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.3.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Especificacao.Ambiente.ApiMagento.PedidoMagento.CadastrarPedido
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "Ambiente.ApiMagento.PedidoMagento.CadastrarPedido")]
    public partial class FLuxoCadastroPedidoMagento_PFFeature : object, Xunit.IClassFixture<FLuxoCadastroPedidoMagento_PFFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "Ambiente.ApiMagento.PedidoMagento.CadastrarPedido"};
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "FluxoCadastroPedidoMagento_PF.feature"
#line hidden
        
        public FLuxoCadastroPedidoMagento_PFFeature(FLuxoCadastroPedidoMagento_PFFeature.FixtureData fixtureData, Especificacao_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "FLuxoCadastroPedidoMagento - PF", "============================\r\nFluxo Magento:\r\nP10_Cliente: \r\n\t- Só aceitamos clie" +
                    "nte PF.\r\n\t- Mover endereço de entrega para Dados cadastrais\r\n\t- Não exigimos tel" +
                    "efones\r\n\t- Endereço: pedidos do magento validamos Cidade contra o IGBE e UF cont" +
                    "ra o CEP informado. Não validamos nenhum outro campo do endereço. \r\n\t\tSe o CEP n" +
                    "ão existir, aceitamos o que veio e só validar a cidade contra o IBGE.\r\n\t- Caso o" +
                    " cliente não exista, cadastramos o cliente. \r\n\r\nP20_Indicador: Se tiver valor de" +
                    " frete significa que tem indicador.\r\n\t- Se tiver valor de frete, inserimos o ind" +
                    "icador do appsettings e validamos se o indicador existe na base de dados.\r\n\t- Va" +
                    "lidamos se a loja que esta no appsettings existe na base de dados.\r\n\r\nP30_InfPed" +
                    "ido: Validar pedido magento, código de origem e pedido marketplace:\r\n\tPedido_mag" +
                    "ento obrigatório, contém somente números, quantidade de caracteres menor que Con" +
                    "stantes.MAX_TAMANHO_ID_PEDIDO_MAGENTO\r\n\tMarketplace_codigo_origem obrigatório e " +
                    "existe na base de dados, t_CODIGO_DESCRICAO Grupo == InfraBanco.Constantes.Const" +
                    "antes.GRUPO_T_CODIGO_DESCRICAO__PEDIDOECOMMERCE_ORIGEM \r\n\tExiste validação adici" +
                    "onal em Especificacao\\Pedido\\Passo30\\CamposMagentoExigidos.feature e Especificac" +
                    "ao\\Pedido\\Passo30\\CamposMagentoNaoAceitos.feature\r\n\r\nP35_Totais: validações de P" +
                    "edidoTotaisMagentoDto\r\n\tCampos não validados: FreteBruto e DescontoFrete\r\n\tCampo" +
                    "s com sua feature: Subtotal, DiscountAmount, BSellerInterest, GrandTotal\r\n\r\nP39_" +
                    "Servicos: para cada linha, consistir Quantidade > 0, RowTotal = Subtotal - Disco" +
                    "untAmount dentro do arredondamento\r\n\r\nP40_Produtos: transfromar produtos compost" +
                    "os e lançar os descontos\r\n\tp05: para cada linha, consistir Quantidade > 0, RowTo" +
                    "tal = Subtotal - DiscountAmount dentro do arredondamento\r\n\tP10: Transformar prod" +
                    "utos compostos em simples\r\n\t\tbuscamos na t_EC_PRODUTO_COMPOSTO e, se não existir" +
                    ", na t_produto_loja\r\n\tP20: Carregar valores dos produtos do banco\r\n\t\tCarregar va" +
                    "lores (t_PRODUTO, t_PRODUTO_LOJA) e coeficientes (t_PERCENTUAL_CUSTO_FINANCEIRO_" +
                    "FORNECEDOR ou fixo) conforme forma de pagamento\r\n\tP30: Inserir os descontos de f" +
                    "orma a chegar nos valores do magento com o frete diluído\r\n\t\t>>>> colocar planilh" +
                    "a\r\n\t\t......\r\n\t\tP40: Garantir o menor arredondamento possível\r\n\tP80: Garatir que " +
                    "tem menos de 12 itens (conforme configuração)\r\n\r\nP50_Pedido: converter estrutura" +
                    "s de dados\r\n\tTratar PontoReferencia, endereco_complemento e NFe_texto_constar: C" +
                    "olocar a informação do ponto de referência no campo \'Constar na NF\'.\r\n\t\tTeste em" +
                    " Ambiente\\ApiMagento\\PedidoMagento\\CadastrarPedido\\P50_Pedido\\Endereco\\PontoRefe" +
                    "rencia.feature\r\n\tCliente PF: Produtor Rural = 1 (Não), Contribuinte ICMS = 0 (In" +
                    "icial), IE = vazio.\r\n\t\tTeste em Especificacao.Ambiente.ApiMagento.PedidoMagento." +
                    "CadastrarPedido.CriacaoCliente.CriacaoCliente_Pf.feature\r\n\tGarantiaIndicador = C" +
                    "onstantes.COD_GARANTIA_INDICADOR_STATUS__NAO\r\n\t\tTeste em Ambiente\\ApiMagento\\Ped" +
                    "idoMagento\\CadastrarPedido\\P50_Pedido\\Detalhes\\Detalhes.feature\r\n\tSó aceitamos o" +
                    "s pagamentos Á vista, Parcela Única, Parcelado no Cartão\r\n\t\tTeste em Ambiente\\Ap" +
                    "iMagento\\PedidoMagento\\CadastrarPedido\\P50_Pedido\\FormaPagto\\*.feature\r\n\r\n\tConve" +
                    "rter pedido para PedidoCriacaoDados\r\n\tConverte Endereco Cadastral para DadosClie" +
                    "nteCadastroDados\r\n\tConverter EnderecoCadastralClienteMagentoDto para EnderecoCad" +
                    "astralClientePrepedidoDados\r\n\tConverter EnderecoEntregaClienteMagentoDto para En" +
                    "derecoEntregaClienteCadastroDados\r\n\tConverter FormaPagtoCriacaoMagentoDto para F" +
                    "ormaPagtoCriacaoDados\r\n\r\nP60_Cadastrar: fazer o cadastro do pedido na rotina glo" +
                    "bal, conforme fluxo Especificacao\\Pedido\\FluxoCriacaoPedido.feature\r\n\r\n=========" +
                    "===================", ProgrammingLanguage.CSharp, new string[] {
                        "Ambiente.ApiMagento.PedidoMagento.CadastrarPedido"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="salvando o pedido base")]
        [Xunit.TraitAttribute("FeatureTitle", "FLuxoCadastroPedidoMagento - PF")]
        [Xunit.TraitAttribute("Description", "salvando o pedido base")]
        public virtual void SalvandoOPedidoBase()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("salvando o pedido base", null, tagsOfScenario, argumentsOfScenario);
#line 62
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 63
 testRunner.Given("Pedido base", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 64
 testRunner.Then("Sem nenhum erro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Fluxo de cadastro do magento")]
        [Xunit.TraitAttribute("FeatureTitle", "FLuxoCadastroPedidoMagento - PF")]
        [Xunit.TraitAttribute("Description", "Fluxo de cadastro do magento")]
        public virtual void FluxoDeCadastroDoMagento()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fluxo de cadastro do magento", null, tagsOfScenario, argumentsOfScenario);
#line 66
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 67
 testRunner.Given("Esta é a especificação, está sendo testado em outros .feature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.3.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                FLuxoCadastroPedidoMagento_PFFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                FLuxoCadastroPedidoMagento_PFFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
