
<style>
    table.dataTable{
        border-collapse:collapse !important;
    }

    .table {
        font-size: smaller;
    }

        .table thead tr th {
            white-space: initial;
        }

        .table tbody td {
            white-space: initial;
        }

    .dataTables_length {
        float: right !important;
        margin-left: 0px;
        align-self: flex-end;
        white-space: pre-line !important;
        text-align: left !important;
    }

    .dataTable_wrapper{
        display:contents;
    }

    .dt-buttons{
        text-align:end !important;
    }

    .dataTables_info{
        font-size:smaller !important;
    }

    .dataTables_paginate{
        text-align:right !important;
    }


</style>
<script>
    var DataTables_language = {
        "sEmptyTable": "Nenhum registro encontrado",
        "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
        "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
        "sInfoFiltered": "(Filtrados de _MAX_ registros)",
        "sInfoPostFix": "",
        "sInfoThousands": ".",
        "sLengthMenu": "Exibir _MENU_ resultados por página",
        "sLoadingRecords": "Carregando...",
        "sProcessing": "Processando...",
        "sZeroRecords": "Nenhum registro encontrado",
        "sSearch": "Pesquisar",
        "oPaginate": {
            "sNext": "Próximo",
            "sPrevious": "Anterior",
            "sFirst": "Primeiro",
            "sLast": "Último"
        },
        "oAria": {
            "sSortAscending": ": Ordenar colunas de forma ascendente",
            "sSortDescending": ": Ordenar colunas de forma descendente"
        },
        "select": {
            "rows": {
                "_": "Selecionado %d linhas",
                "0": "Nenhuma linha selecionada",
                "1": "Selecionado 1 linha"
            }
        }
    };

    jQuery.extend(jQuery.fn.dataTableExt.oSort, {
        "moeda-pre": function (a) {
            a = (a === "-") ? 0 : a.replace(/[^\d\-]/g, "");
            console.log(parseFloat(a));
            return parseFloat(a);
        },

        "moeda-asc": function (a, b) {
            return a - b;
        },

        "moeda-desc": function (a, b) {
            return b - a;
        }
    });

    jQuery.extend(jQuery.fn.dataTableExt.oSort, {
        "databr-pre": function (a) {
            //order por datas, em dd/mm/aa
            let partes = a.toString().split('/');
            let ret = 0;
            if (partes.length > 0)
                ret += parseInt(partes[0]);
            if (partes.length > 1)
                ret += parseInt(partes[1]) * 32;
            if (partes.length > 2)
                ret += parseInt(partes[2]) * 380;
            return ret;
        },

        "databr-asc": function (a, b) {
            return a - b;
        },

        "databr-desc": function (a, b) {
            return b - a;
        }
    });

    jQuery.extend(jQuery.fn.DataTable.ext.pager.numbers_length = 8);


    var DataTables_dom_botoes = 'lfrtipB';
    var DataTables_dom = 'lfrtip';
    var DataTables_buttons = [

        //botao copiar, nao temos como traduzir a mensagem...
        //{
        //    extend: 'copy', text: 'Copiar',
        //    fnComplete: function (nButton, oConfig, oFlash, sFlash) {
        //        alert('Button action complete');
        //    }
        //},

        {
            extend: 'excel', text: 'Exportar para Excel'
        },
        {
            extend: 'pdf' , text: 'Exportar para PDF'
        }
    ];

    var DataTables_lengthMenu = [[10, 25, 50, -1], [10, 25, 50, "Todos"]];

    function intiDatatables(seletor, config) {

        //queremos estas classes
        config.sPaginationType = "simple_numbers";
        config.lengthMenu = DataTables_lengthMenu;
        config.language = DataTables_language;
        config.dom = DataTables_dom_botoes;
        config.buttons = DataTables_buttons;

        //nao funciona!
        //digo, funciona, mas precisa redesenhar as classes.
        //$.fn.dataTable.ext.classes.sPageButton = "paginate_button waves-effect waves-light btn-small";

        let ret = $(seletor).DataTable(config);

        $(".buttons-copy").hide();
        $(".dt-buttons").addClass("col-xl-12 col-lg-12 col-md-12 col-sm-12 px-0 mt-2");

        $(".dt-responsive").addClass("px-3");

        $(".tabeladados").addClass("px-0");
        $(".dataTables_paginate").addClass("col-xl-6 col-lg-7 col-md-7 col-sm-12 px-0");
        $(".dataTables_wrapper").addClass("row");
        $(".dataTables_info").addClass("col-xl-6 col-lg-5 col-md-5 pl-0");
        $(".dataTables_length").addClass("form-group col-xl-6 col-lg-6 col-md-6 col-sm-6 pl-0");
        $(".dataTables_length").find('select').addClass("custom-select ml-0");
        $(".dataTables_length").find('label').addClass("col-form-label");
        $(".dataTables_filter").addClass("form-group col-xl-6 col-lg-6 col-md-6 col-sm-6 pr-0");
        $(".dataTables_filter").find('label').addClass('col-form-label');
        $(".dataTables_filter").children().find('input').addClass('form-control');
        $(".dt-buttons a").addClass("btn btn-primary btn-sm paginate_button");
        $(".buttons-excel").addClass("mr-2");
        $(".dt-buttons a").removeClass("dt-button");

        $(seletor).show();
        return ret;
    }

    $(window).resize(function () {
        if (window.innerWidth < 767)
            AlterarClasse_length_filter();
    });

    $(function () {
    //se a tela estive nessa resolução ao atualizar 
    if (window.innerWidth < 767) {
        AlterarClasse_length_filter();
    }

});

    function AlterarClasse_length_filter() {
        $(".dataTables_filter").removeClass("col-sm-6");
        $(".dataTables_filter").addClass("col-sm-12");

        $(".dataTables_length").removeClass("col-sm-12");
        $(".dataTables_length").addClass("col-sm-6");
    }

</script>
